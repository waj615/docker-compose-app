# FROM alpine:3.6

FROM hub.c.163.com/library/centos:6.8

#install dependency
RUN     yum install -y zlib zlib-devel pcre pcre-devel gcc gcc-c++ openssl \
        openssl-devel libevent libevent-devel perl unzip
WORKDIR /fastdfs
ENV     WORK=/fastdfs \
        NGINX_VERSION='1.13.8' \
        HTTP_SERVER_PORT=8080 \
        STORAGE_PORT=23000 \
        BASE_PATH='/var/local/fdfs' \
        PATH=/fastdfs:${PATH}
# # 安装准备
# RUN    apk update && apk add --no-cache --virtual .build-deps bash gcc libc-dev make \
#         openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev

# 下载fastdfs、libfastcommon、nginx插件的源码
#ADD *.tar.gz *.sh ${WORK}/

RUN     cd /${WORK}} \
        && curl -fSL  https://github.com/happyfish100/libfastcommon/archive/V1.0.39.tar.gz -o fastcommon.tar.gz \
        && curl -fSL  https://codeload.github.com/happyfish100/fastdfs/tar.gz/V5.11 -o fastfs.tar.gz \
        && curl -fSL  https://github.com/happyfish100/fastdfs-nginx-module/archive/master.tar.gz -o nginx-module.tar.gz \
        && tar zxf fastcommon.tar.gz \
        && tar zxf fastfs.tar.gz \
        && tar zxf nginx-module.tar.gz

# 安装fdfs
RUN     cd ${WORK}/libfastcommon/ \
        && chmod 777 make.sh \ 
        && ./make.sh \
        && ./make.sh install 

RUN     cd ${WORK}/fastdfs/ \
        && chmod 777 make.sh \
        && ./make.sh \
        && ./make.sh install 
		
RUN     cd /etc/fdfs/ \
        && sed -i "s|/home/yuqing/fastdfs|${BASE_PATH}/tracker|g" /etc/fdfs/tracker.conf \
        && sed -i "s|/home/yuqing/fastdfs|${BASE_PATH}/storage|g" /etc/fdfs/storage.conf \
        && sed -i "s|/home/yuqing/fastdfs|${BASE_PATH}/storage|g" /etc/fdfs/client.conf 
RUN yum -y install gd-devel.x86_64
# 获取nginx源码，与fastdfs插件一起编译
# RUN     cd ${WORK} \
#         && curl -fSL http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -o nginx-${NGINX_VERSION}.tar.gz \
#         && tar zxf nginx-${NGINX_VERSION}.tar.gz \
#         && chmod u+x ${WORK}/fastdfs-nginx-module-master/src/config \
#         && cd nginx-${NGINX_VERSION} \
#         && ./configure --add-module=${WORK}/fastdfs-nginx-module-master/src \
#         && make && make install

# 设置nginx和fastdfs联合环境，并配置nginx
RUN     cd ${WORK} \
        && chmod u+x ${WORK}/fastdfs-nginx-module-master/src/config \
        && cd nginx-${NGINX_VERSION} \
        && ./configure --add-module=${WORK}/fastdfs-nginx-module-master/src --with-http_image_filter_module \
        && make && make install \
        && \
        cp ${WORK}/fastdfs-nginx-module-master/src/mod_fastdfs.conf /etc/fdfs/ \
        && sed -i "s|^store_path0.*$|store_path0=${BASE_PATH}/storage|g" /etc/fdfs/mod_fastdfs.conf \
        && sed -i "s|^url_have_group_name =.*$|url_have_group_name = true|g" /etc/fdfs/mod_fastdfs.conf \
        && cd ${WORK}/fastdfs/conf/ \
        && cp http.conf mime.types anti-steal.jpg /etc/fdfs/

COPY  nginx.conf /usr/local/nginx/conf/nginx.conf

# 后续
RUN     rm -rf `ls -l  ${WORK} | grep '^d' | awk '{print \$NF}'` ; \
        mkdir -p ${BASE_PATH}/tracker && \
        mkdir -p ${BASE_PATH}/storage && \
        cd ${WORK} && mv tracker.sh tracker && mv storage.sh storage
# RUN rm -rf ${WORK}/* && \ 
#         apk del .build-deps gcc libc-dev make openssl-dev \
#         linux-headers curl gnupg libxslt-dev gd-dev geoip-dev && \
#         apk add bash pcre-dev zlib-dev



EXPOSE 22122 23000 8080

# COPY *.sh ${WORK}/

CMD tracker
